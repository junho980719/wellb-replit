-- MySQL DDL Script

-- Table: CODE_GP
CREATE TABLE CODE_GP
(
    CODE_KIND      VARCHAR(20)  NOT NULL COMMENT '코드종류구분',
    CODE           VARCHAR(20)  NOT NULL COMMENT '코드',
    CODE_NM        VARCHAR(500) NULL COMMENT '코드명',
    CODE_DESC      VARCHAR(500) NULL COMMENT '관리항목_문자',
    SORT_NO        INTEGER      NULL COMMENT '정렬순서',
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    INPUT_USER_SEQ INTEGER      NULL COMMENT '입력_사용자순번',
    CODE_NUM       INTEGER      NULL COMMENT '관리항목_숫자',
    UP_CODE_KIND   VARCHAR(20)  NULL COMMENT '상위_코드종류구분',
    UP_CODE        VARCHAR(20)  NULL COMMENT '상위_코드',
    UPDATE_DT      TIMESTAMP    NULL COMMENT '수정일시',
    PRIMARY KEY (CODE_KIND, CODE)
) COMMENT ='공통코드집';

-- Table: COUNSEL
CREATE TABLE COUNSEL
(
    CNSLT_SEQ      INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '상담신청순번',
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    ORG_SEQ        CHAR(200)    NULL COMMENT '기관번호',
    USER_SEQ       INTEGER      NOT NULL COMMENT '회원순번',
    CNSLT_REQ_CONT VARCHAR(500) NULL COMMENT '상담요청내용',
    CNSLT_REQ_NM   VARCHAR(200) NULL COMMENT '상담요청자명',
    CNSLT_HP       VARCHAR(20)  NULL COMMENT '상담요청자전화번호'
) COMMENT ='상담신청';

-- Table: COUNSEL_RESULT
CREATE TABLE COUNSEL_RESULT
(
    RSLT_SEQ     INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '상담결과순번',
    INPUT_DT     TIMESTAMP    NULL COMMENT '입력일시',
    CNSL_CONT    VARCHAR(500) NULL COMMENT '상담내용',
    CNSL_DT      TIMESTAMP    NULL COMMENT '상담일시',
    RESVE_SEQ    INTEGER      NOT NULL COMMENT '상담예약순번',
    CNSL_NM      VARCHAR(200) NULL COMMENT '상담자명',
    CNSL_RSLT_CD VARCHAR(20)  NULL COMMENT '상담결과구분코드'
) COMMENT ='상담결과';

-- Table: COUNSEL_RESVE
CREATE TABLE COUNSEL_RESVE
(
    RESVE_SEQ          INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '상담예약순번',
    INPUT_DT           TIMESTAMP    NULL COMMENT '입력일시',
    ORG_SEQ            INTEGER      NOT NULL COMMENT '상담기관번호',
    CNSL_REQ_CONT      VARCHAR(500) NULL COMMENT '상담요청내용',
    CNSLT_SEQ          INTEGER      NOT NULL COMMENT '상담신청순번',
    CNSL_RESVE_DT      TIMESTAMP    NULL COMMENT '상담예약일시',
    CNSL_USER_GB_CD    VARCHAR(20)  NULL COMMENT '상담회원구분코드',
    CNSL_ACCES_CHNL_CD VARCHAR(20)  NULL COMMENT '상담접근채널코드',
    CNSL_ENTER_CHNL_CD VARCHAR(20)  NULL COMMENT '상담유입채널코드'
) COMMENT ='상담접수예약';

-- Table: CUSTOM_INQUIRY
CREATE TABLE CUSTOM_INQUIRY
(
    INQ_SEQ        INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '고객문의순번',
    INPUT_DT       TIMESTAMP     NULL COMMENT '입력일시',
    INQ_TITLE      VARCHAR(500)  NULL COMMENT '문의제목',
    INQ_CONT       VARCHAR(4000) NULL COMMENT '문의내용',
    WRITE_USER_SEQ INTEGER       NULL COMMENT '작성자',
    WRITE_DT       TIMESTAMP     NULL COMMENT '작성일',
    ADD_FILE       VARCHAR(500)  NULL COMMENT '첨부파일명',
    UPDATE_DT      TIMESTAMP     NULL COMMENT '수정일시',
    UP_INQ_SEQ     INTEGER       NULL COMMENT '상위문의번호'
) COMMENT ='고객문의';

-- Table: EVENT
CREATE TABLE EVENT
(
    EVENT_SEQ         INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '행사순번',
    EVENT_CONT        VARCHAR(500) NULL COMMENT '행사내용',
    EVENT_NM          VARCHAR(500) NULL COMMENT '행사명',
    ORG_SEQ           INTEGER      NOT NULL COMMENT '기관순번',
    EVENT_DT          TIMESTAMP    NULL COMMENT '행사일시',
    EVENT_PLC         VARCHAR(500) NULL COMMENT '행사장소',
    EVENT_TOT_CNT     INTEGER      NULL COMMENT '참석정원',
    PARTCPT_FEE       INTEGER      NULL COMMENT '행사참가비',
    EVENT_KIND_CD     VARCHAR(20)  NULL COMMENT '대회종목코드',
    APRV_REQ_YN       VARCHAR(1)   NULL COMMENT '행사승인요청여부',
    APRV_REQ_DT       TIMESTAMP    NULL COMMENT '행사승인요청일시',
    UP_APRV_ORG_SEQ   INTEGER      NULL COMMENT '상위승인요청기관번호',
    APRV_REQ_USER_SEQ INTEGER      NULL COMMENT '행사승인요청회원번호',
    UP_APRV_YN        VARCHAR(1)   NULL COMMENT '상위승인여부',
    UP_APRV_USER_SEQ  INTEGER      NULL COMMENT '상위승인자회원번호',
    UP_APRV_DT        TIMESTAMP    NULL COMMENT '상위승인일시'
) COMMENT ='행사';

-- Table: EVENT_DPLM
CREATE TABLE EVENT_DPLM
(
    EVENT_DPLM_SEQ  INTEGER    NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '행사수료순번',
    EVEBT_DPLM_CONT CHAR(200)  NULL COMMENT '행사수료내용',
    DPLM_YMD        VARCHAR(8) NULL COMMENT '수료일자',
    EVENT_APPLY_SEQ INTEGER    NOT NULL COMMENT '행사신정순번'
) COMMENT ='행사수료';

-- Table: EVENT_PARTCPT_APPLY
CREATE TABLE EVENT_PARTCPT_APPLY
(
    INPUT_DT           TIMESTAMP   NULL COMMENT '입력일시',
    OUTPUT_DT          TIMESTAMP   NULL COMMENT '수정일시',
    EVENT_APPLY_SEQ    INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '행사신정순번',
    SALES_TYPE         VARCHAR(20) NULL COMMENT '매출유형코드',
    REFUND_YN          VARCHAR(1)  NULL COMMENT '환불여부',
    EVENT_PARTCPT_FEE  INTEGER     NULL COMMENT '행사참가비',
    USER_SEQ           INTEGER     NOT NULL COMMENT '회원순번',
    EVENT_SEQ          INTEGER     NOT NULL COMMENT '행사순번',
    EVENT_PARTCPT_TYPE VARCHAR(20) NULL COMMENT '행사참가유형코드',
    APPLY_DT           TIMESTAMP   NULL COMMENT '신청일자',
    EVENT_PARTCPT_CNT  INTEGER     NULL COMMENT '행사참가단체인원',
    PAY_YN             VARCHAR(1)  NULL COMMENT '결제여부'
) COMMENT ='행사참가신청';

-- Table: EVENT_PARTCPT_ATTNED_CHK
CREATE TABLE EVENT_PARTCPT_ATTNED_CHK
(
    EVEND_ATTEND_CHK_SEQ INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '행사출결순번',
    ENTER_DT             TIMESTAMP NULL COMMENT '입장일시',
    EXIT_DT              TIMESTAMP NULL COMMENT '퇴장일시',
    EVENT_APPLY_SEQ      INTEGER   NOT NULL COMMENT '행사신정순번'
) COMMENT ='행사출결';

-- Table: FAQ
CREATE TABLE FAQ
(
    FAQ_SEQ        INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT 'FAQ순번',
    INPUT_DT       TIMESTAMP     NULL COMMENT '입력일시',
    FAQ_TITLE      VARCHAR(500)  NULL COMMENT '질문제목',
    WRITE_USER_SEQ INTEGER       NULL COMMENT '작성자',
    WRITE_DT       TIMESTAMP     NULL COMMENT '작성일',
    ADD_FILE       VARCHAR(500)  NULL COMMENT '첨부파일명',
    UPDATE_DT      TIMESTAMP     NULL COMMENT '수정일시',
    FAQ_CONT       VARCHAR(4000) NULL COMMENT '질문내용',
    ANSWER         VARCHAR(2000) NULL COMMENT '답변'
) COMMENT ='FAQ';

-- Table: INSTR_CONT_INFO
CREATE TABLE INSTR_CONT_INFO
(
    INPUT_DT      TIMESTAMP NULL COMMENT '입력일시',
    USER_SEQ      INTEGER   NOT NULL COMMENT '강사회원번호',
    CONT_SEQ      INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '강사계약순번',
    UPDATE_DT     TIMESTAMP NULL COMMENT '수정일시',
    FEE_ACCOUNT   CHAR(200) NULL COMMENT '수당지급계좌',
    ORG_SEQ       INTEGER   NOT NULL COMMENT '기관순번',
    INSTR_FEE     INTEGER   NULL COMMENT '강사료',
    INSTR_AGRE_DT TIMESTAMP NULL COMMENT '강사동의일시'
) COMMENT ='강사계약정보';

-- Table: INSTR_CRTFCT
CREATE TABLE INSTR_CRTFCT
(
    INPUT_DT         TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT        TIMESTAMP    NULL COMMENT '수정일시',
    CRTFCT_START_YMD VARCHAR(8)   NULL COMMENT '자격취득일자',
    CRTFCT_END_YMD   VARCHAR(8)   NULL COMMENT '자격종료일자',
    CRTFCT_NM        VARCHAR(500) NULL COMMENT '자격명',
    CRTFCT_ORG_NM    VARCHAR(500) NULL COMMENT '자격발급기관명',
    USER_SEQ         INTEGER      NOT NULL COMMENT '회원순번',
    CRTFCT_SEQ       INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '자격순번',
    CRTFCT_DESC      VARCHAR(500) NULL COMMENT '자격설명'
) COMMENT ='강사자격증정보';

-- Table: INSTR_EXPER
CREATE TABLE INSTR_EXPER
(
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT      TIMESTAMP    NULL COMMENT '수정일시',
    EXPER_START_DT VARCHAR(8)   NULL COMMENT '경력시작일자',
    EXPER_END_DT   VARCHAR(8)   NULL COMMENT '경력종료일자',
    EXPER_CONT     VARCHAR(500) NULL COMMENT '경력내용',
    EXPER_ORG      VARCHAR(500) NULL COMMENT '경력기관명',
    USER_SEQ       INTEGER      NOT NULL COMMENT '회원순번',
    EXPER_SEQ      INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '경력순번'
) COMMENT ='강사경력정보';

-- Table: INSTR_PREMIER
CREATE TABLE INSTR_PREMIER
(
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT      TIMESTAMP    NULL COMMENT '수정일시',
    PERMIER_YMD    VARCHAR(8)   NULL COMMENT '수상일자',
    CONTEST_NM     VARCHAR(500) NULL COMMENT '대회명',
    CONTEST_ORG_NM VARCHAR(500) NULL COMMENT '대회기관명',
    USER_SEQ       INTEGER      NOT NULL COMMENT '회원순번',
    PREMIER_SEQ    INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '수상순번',
    PREMIER_NM     VARCHAR(500) NULL COMMENT '수상명'
) COMMENT ='강사수상정보';

-- Table: JOB_OFFER
CREATE TABLE JOB_OFFER
(
    INPUT_DT        TIMESTAMP     NULL COMMENT '입력일시',
    USER_SEQ        VARCHAR(500)  NULL COMMENT '근무지역',
    OFFER_SEQ       INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '구인순번',
    LECT_DAY        VARCHAR(500)  NULL COMMENT '수업요일',
    LECT_TIME       VARCHAR(500)  NULL COMMENT '수업시간',
    LECT_AMT        INTEGER       NULL COMMENT '수당금액',
    INSTR_CRTFCT    VARCHAR(500)  NULL COMMENT '필요자격증',
    ETC             VARCHAR(2000) NULL COMMENT '비고',
    UPDATE_DT       TIMESTAMP     NULL COMMENT '수정일시',
    ORG_SEQ         INTEGER       NOT NULL COMMENT '기관순번',
    OFFER_START_YMD VARCHAR(8)    NULL COMMENT '구인시작일',
    OFFER_END_YMD   VARCHAR(8)    NULL COMMENT '구인종료일'
) COMMENT ='구인공고';

-- Table: JOB_OFFER_APPLY
CREATE TABLE JOB_OFFER_APPLY
(
    INPUT_DT        TIMESTAMP NULL COMMENT '입력일시',
    USER_SEQ        INTEGER   NOT NULL COMMENT '강사회원번호',
    OFFER_APPLY_SEQ INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '구인지원순번',
    OPDATE_DT       TIMESTAMP NULL COMMENT '수정일시',
    APPLY_DT        TIMESTAMP NULL COMMENT '응시일시',
    OFFER_SEQ       INTEGER   NOT NULL COMMENT '구인순번'
) COMMENT ='구인지원';

-- Table: JOB_POSTING
CREATE TABLE JOB_POSTING
(
    INPUT_DT        TIMESTAMP    NULL COMMENT '입력일시',
    USER_SEQ        INTEGER      NOT NULL COMMENT '강사회원번호',
    JOB_POST_SEQ    INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '구직순번',
    LECT_AVAIL_DAY  VARCHAR(200) NULL COMMENT '수업가능요일',
    LECT_AVAIL_TIME VARCHAR(200) NULL COMMENT '수업가능시간',
    HELD_CRTFCT     VARCHAR(500) NULL COMMENT '보유자격증',
    ETC             VARCHAR(500) NULL COMMENT '비고',
    UPDATE_DT       TIMESTAMP    NULL COMMENT '수정일시',
    POST_START_YMD  VARCHAR(8)   NULL COMMENT '구직시작일',
    POST_END_YMD    VARCHAR(8)   NULL COMMENT '구직종료일',
    HOPE_AREA       VARCHAR(500) NULL COMMENT '희망근무지역'
) COMMENT ='구직공고';

-- Table: LECTURE
CREATE TABLE LECTURE
(
    UPDATE_DT       TIMESTAMP    NULL COMMENT '수정일시',
    INPUT_DT        TIMESTAMP    NULL COMMENT '입력일시',
    KIND_CD         CHAR(200)    NULL COMMENT '종목코드',
    LECT_SEQ        INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '강의순번',
    ITEM_CD         VARCHAR(20)  NULL COMMENT '상세종목코드',
    LECT_GU_CD      VARCHAR(20)  NULL COMMENT '수업구분코드',
    WRITE_USER_SEQ  INTEGER      NULL COMMENT '입력자회원번호',
    LECT_TOTAL_CNT  INTEGER      NULL COMMENT '수업정원',
    LECT_START_YMD  VARCHAR(8)   NULL COMMENT '수업시작일자',
    LECT_END_YMD    VARCHAR(8)   NULL COMMENT '수업종료일자',
    LECT_PERIOD_DAY INTEGER      NULL COMMENT '수업기간_일',
    LECT_DAILY_TIME INTEGER      NULL COMMENT '일일수업_시간',
    LECT_PLC        VARCHAR(500) NULL COMMENT '수업장소',
    LECT_TOTAL_TIME INTEGER      NULL COMMENT '수업총_시간',
    ORG_SEQ         INTEGER      NOT NULL COMMENT '기관순번',
    DPLM_YN         VARCHAR(1)   NULL COMMENT '수료중발급여부',
    DPLM_ORG        INTEGER      NULL COMMENT '수료증발급기관',
    CRTFCT_YN       VARCHAR(1)   NULL COMMENT '자격증발급여부',
    CRTFCT_ORG      INTEGER      NULL COMMENT '자격증발급기관',
    REWARD_PAY_YN   VARCHAR(1)   NULL COMMENT '리워드제공여부',
    REWARD_PAY_AMT  INTEGER      NULL COMMENT '리워드지급액',
    LECT_EQUMT      VARCHAR(500) NULL COMMENT '강의장비',
    LECT_FEE        INTEGER      NULL COMMENT '수강료',
    LECT_NM         VARCHAR(500) NULL COMMENT '수업명',
    CRTFCT_RQISIT   VARCHAR(500) NULL COMMENT '자격취득요건',
    PAY_GU_CD       VARCHAR(20)  NULL COMMENT '결제구분코드'
) COMMENT ='강의';

-- Table: LECTURE_ATTEND_CHK
CREATE TABLE LECTURE_ATTEND_CHK
(
    ATTEND_CHK_SEQ INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '수강출결순번',
    ENTER_DT       TIMESTAMP NULL COMMENT '입장일시',
    MEM_APL_SEQ    INTEGER   NOT NULL COMMENT '회원권신청순번',
    EXIT_DT        TIMESTAMP NULL COMMENT '퇴장일시',
    LECT_SEQ       INTEGER   NOT NULL COMMENT '강의순번',
    ENTER_USER_SEQ INTEGER   NULL COMMENT '입장입력자',
    EXIT_USER_SEQ  INTEGER   NULL COMMENT '퇴장입력자'
) COMMENT ='수강출결';

-- Table: LECTURE_ATTEND_FEEDBACK
CREATE TABLE LECTURE_ATTEND_FEEDBACK
(
    FEEDBACK_SEQ  INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '수강회원피드백순번',
    FEEDBACK_DT   TIMESTAMP    NULL COMMENT '피드백일시',
    MEM_APL_SEQ   INTEGER      NOT NULL COMMENT '회원권신청순번',
    INPUT_DT      TIMESTAMP    NULL COMMENT '입력일시',
    FEEDBACK_CONT VARCHAR(500) NULL COMMENT '피드백내용',
    OUTPUT_DT     TIMESTAMP    NULL COMMENT '수정일시',
    LECT_SEQ      INTEGER      NOT NULL COMMENT '강의순번',
    REPORT_SEQ    INTEGER      NOT NULL COMMENT '강의리포트순번'
) COMMENT ='수강회원피드백';

-- Table: LECTURE_CRTFCT_INFO
CREATE TABLE LECTURE_CRTFCT_INFO
(
    CRTFCT_SEQ       INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '자격증순번',
    CRTFCT_NO        CHAR(200)    NULL COMMENT '자격증번호',
    MEM_APL_SEQ      INTEGER      NOT NULL COMMENT '회원권신청순번',
    INPUT_DT         TIMESTAMP    NULL COMMENT '입력일시',
    OUTPUT_DT        TIMESTAMP    NULL COMMENT '수정일시',
    CRTFCT_ORG_SEQ   INTEGER      NULL COMMENT '자격증발급기관',
    CTRFCT_NM        VARCHAR(500) NULL COMMENT '가격증명',
    CRTFCT_CONT      VARCHAR(500) NULL COMMENT '가격내용',
    CRTFCT_ISSUE_YMD VARCHAR(8)   NULL COMMENT '가격증발급일자',
    LECT_SEQ         INTEGER      NOT NULL COMMENT '강의순번'
) COMMENT ='가격증정보';

-- Table: LECTURE_DPLM_INFO
CREATE TABLE LECTURE_DPLM_INFO
(
    DPLM_SEQ       INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '수료증순번',
    DPLM_NO        CHAR(200)    NULL COMMENT '수료증번호',
    MEM_APL_SEQ    INTEGER      NOT NULL COMMENT '회원권신청순번',
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    OUTPUT_DT      TIMESTAMP    NULL COMMENT '수정일시',
    DPLM_ORG_SEQ   INTEGER      NULL COMMENT '수료증발급기관',
    DPLM_NM        VARCHAR(500) NULL COMMENT '수료증명',
    DPLM_CONT      VARCHAR(500) NULL COMMENT '수료내용',
    DPLM_ISSUE_YMD VARCHAR(8)   NULL COMMENT '수료증발급일자',
    LECT_SEQ       INTEGER      NOT NULL COMMENT '강의순번'
) COMMENT ='수료증정보';

-- Table: LECTURE_EVAL
CREATE TABLE LECTURE_EVAL
(
    EVAL_SEQ    INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '수강평가순번',
    EVAL_DT     TIMESTAMP    NULL COMMENT '평가일시',
    MEM_APL_SEQ INTEGER      NOT NULL COMMENT '회원권신청순번',
    INPUT_DT    TIMESTAMP    NULL COMMENT '입력일시',
    EVAL_CONT   VARCHAR(500) NULL COMMENT '평가내용',
    OUTPUT_DT   TIMESTAMP    NULL COMMENT '수정일시',
    LECT_SEQ    INTEGER      NOT NULL COMMENT '강의순번'
) COMMENT ='수강평가';

-- Table: LECTURE_INSTR
CREATE TABLE LECTURE_INSTR
(
    LECT_START_YMD VARCHAR(8) NULL COMMENT '강의시작일자',
    INPUT_DT       TIMESTAMP  NULL COMMENT '입력일시',
    UPDATE_DT      TIMESTAMP  NULL COMMENT '수정일시',
    LECT_SEQ       INTEGER    NOT NULL COMMENT '강의순번',
    LECT_INSTR_SEQ INTEGER    NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '강의담당강사순번',
    USER_SEQ       INTEGER    NOT NULL COMMENT '회원순번',
    INSTR_FEE      INTEGER    NULL COMMENT '강사료'
) COMMENT ='강의담당강사';

-- Table: LECTURE_REPORT
CREATE TABLE LECTURE_REPORT
(
    REPORT_SEQ     INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '강의리포트순번',
    REPORT_DT      TIMESTAMP     NULL COMMENT '리포트일시',
    INPUT_DT       TIMESTAMP     NULL COMMENT '입력일시',
    REPORT_CONT    VARCHAR(2000) NULL COMMENT '리포트내용',
    OUTPUT_DT      TIMESTAMP     NULL COMMENT '수정일시',
    LECT_INSTR_SEQ INTEGER       NOT NULL COMMENT '회원순번'
) COMMENT ='강의리포트';

-- Table: LECTURE_RSVT
CREATE TABLE LECTURE_RSVT
(
    RSVT_SEQ      INTEGER    NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '에약순번',
    INPUT_DT      TIMESTAMP  NULL COMMENT '입력일시',
    OUTPUT_DT     TIMESTAMP  NULL COMMENT '수정일시',
    RSVT_COMPL_YN VARCHAR(1) NULL COMMENT '예약확정구분',
    RSVT_DT       TIMESTAMP  NULL COMMENT '사전예약일시',
    SCHDL_SEQ     INTEGER    NOT NULL COMMENT '일정순번',
    MEM_APL_SEQ   INTEGER    NOT NULL COMMENT '회원권신청순번'
) COMMENT ='강의에약';

-- Table: LECTURE_SCHEDULE
CREATE TABLE LECTURE_SCHEDULE
(
    SCHDL_SEQ       INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '일정순번',
    INPUT_DT        TIMESTAMP   NULL COMMENT '입력일시',
    OUTPUT_DT       TIMESTAMP   NULL COMMENT '수정일시',
    LECT_SEQ        INTEGER     NOT NULL COMMENT '강의순번',
    LECT_YMD        VARCHAR(8)  NULL COMMENT '강의일자',
    RSVT_POSV_YN    VARCHAR(1)  NULL COMMENT '예약가능여부',
    RSVT_PERIOD     INTEGER     NULL COMMENT '예약기간일',
    RSVT_END_DT     TIMESTAMP   NULL COMMENT '예약종료일시',
    LECT_STAR_TIME  VARCHAR(20) NULL COMMENT '강의시작시간',
    LECT_END_TIME   VARCHAR(20) NULL COMMENT '강의종료시간',
    LECT_DAILY_TIME VARCHAR(20) NULL COMMENT '일일강의시간',
    RSVT_START_DT   TIMESTAMP   NULL COMMENT '예약시작일시',
    LECT_CAPACITY   INTEGER     NULL COMMENT '강의수용인원',
    USER_SEQ        INTEGER     NOT NULL COMMENT '회원순번'
) COMMENT ='강의일정등록';

-- Table: MEMBERSHIP
CREATE TABLE MEMBERSHIP
(
    INPUT_DT        TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT       TIMESTAMP    NULL COMMENT '수정일시',
    MEM_SEQ         INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '회원권순번',
    ORG_SEQ         INTEGER      NOT NULL COMMENT '기관순번',
    MEM_KIND        VARCHAR(20)  NULL COMMENT '회원권종류',
    MEM_NM          VARCHAR(500) NULL COMMENT '상품명',
    MEM_STRAT_YMD   VARCHAR(8)   NULL COMMENT '상품판매시작일',
    MEM_END_YMD     VARCHAR(8)   NULL COMMENT '상품판매종료일',
    MEM_AMT         INTEGER      NULL COMMENT '정상금액',
    CLASS_CD        VARCHAR(20)  NULL COMMENT '종목분류',
    AVAIL_TIME      VARCHAR(20)  NULL COMMENT '이용가능기간',
    AVAIL_CNT       INTEGER      NULL COMMENT '이용가능횟수',
    SUSPEND_CNT     INTEGER      NULL COMMENT '정지가능횟수',
    USE_YN          VARCHAR(1)   NULL COMMENT '사용여부',
    ADDITION_MEM    VARCHAR(200) NULL COMMENT '기존회원이용추가',
    GUBUN_CD        VARCHAR(20)  NULL COMMENT '구분',
    TRANSFERABLE_YN VARCHAR(1)   NULL COMMENT '양도가능여부',
    UPDATE_USER_SEQ INTEGER      NULL COMMENT '최후수정자'
) COMMENT ='회원권';

-- Table: MEMBERSHIP_APPLY
CREATE TABLE MEMBERSHIP_APPLY
(
    INPUT_DT            TIMESTAMP   NULL COMMENT '입력일시',
    UPDATE_DT           TIMESTAMP   NULL COMMENT '수정일시',
    MEM_APL_SEQ         INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '회원권신청순번',
    SALES_TYPE          VARCHAR(20) NULL COMMENT '매출유형',
    REFUND_YN           VARCHAR(1)  NULL COMMENT '환불여부',
    INSTR_FEE           INTEGER     NULL COMMENT '수강료',
    PAY_YN              VARCHAR(1)  NULL COMMENT '결제여부',
    LECT_SEQ            INTEGER     NOT NULL COMMENT '강의순번',
    USER_SEQ            INTEGER     NOT NULL COMMENT '일반회원번호',
    TARGET_SELECT_YN    VARCHAR(1)  NULL COMMENT '대상자선정여부',
    MEM_SEQ             INTEGER     NOT NULL COMMENT '회원권순번',
    ATTEND_START_YMD    VARCHAR(8)  NULL COMMENT '수강시작일자',
    CURR_ATTEND_END_YMD VARCHAR(8)  NULL COMMENT '현재수강종료일자',
    ATTEND_TIME         INTEGER     NULL COMMENT '수강기간',
    ATTEND_END_YMD      VARCHAR(8)  NULL COMMENT '신청시수강종료일자'
) COMMENT ='회원권신청';

-- Table: MEMBERSHIP_LECTURE
CREATE TABLE MEMBERSHIP_LECTURE
(
    MEM_LECT_SEQ INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '회원권포함강의순번',
    INPUT_DT     TIMESTAMP NULL COMMENT '입력일시',
    UPDATE_DT    TIMESTAMP NULL COMMENT '수정일시',
    LECT_SEQ     INTEGER   NOT NULL COMMENT '강의순번',
    MEM_SEQ      INTEGER   NOT NULL COMMENT '회원권순번',
    ORG_SEQ      INTEGER   NOT NULL COMMENT '기관순번'
) COMMENT ='회원권포함강의';

-- Table: MEMBERSHIP_STOP
CREATE TABLE MEMBERSHIP_STOP
(
    MEM_STOP_SEQ   INTEGER    NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '회원권정지순번',
    STOP_START_YMD VARCHAR(8) NULL COMMENT '회원권정지시작일자',
    STOP_REQ_DT    TIMESTAMP  NULL COMMENT '정지요청일시',
    STOP_END_YMD   VARCHAR(8) NULL COMMENT '회원권정지종료일자',
    MEM_APL_SEQ    INTEGER    NOT NULL COMMENT '회원권신청순번'
) COMMENT ='회원권정치';

-- Table: MENU
CREATE TABLE MENU
(
    MENU_SEQ       INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '메뉴순번',
    MENU_NM        VARCHAR(500) NULL COMMENT '메뉴명',
    MENU_URL       VARCHAR(500) NULL COMMENT '메뉴URL',
    UP_MENU_SEQ    INTEGER      NULL COMMENT '상위메뉴순번',
    USE_YN         VARCHAR(1)   NULL COMMENT '미사용여부',
    MENU_LEVEL     INTEGER      NULL COMMENT '메뉴레벨',
    SORT_NO        INTEGER      NULL COMMENT '나열순서',
    INPUT_USER_SEQ INTEGER      NULL COMMENT '입력_사용자순번',
    INPUT_DT       TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT      TIMESTAMP    NULL COMMENT '수정일시'
) COMMENT ='메뉴';

-- Table: NOTIFICATION
CREATE TABLE NOTIFICATION
(
    NOTI_SEQ   INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '공지사항순번',
    INPUT_DT   TIMESTAMP     NULL COMMENT '입력일시',
    TITLE      VARCHAR(500)  NULL COMMENT '제목',
    CONT       VARCHAR(4000) NULL COMMENT '내용',
    WRITE_USER INTEGER       NULL COMMENT '작성자',
    WRITE_dt   TIMESTAMP     NULL COMMENT '작성일',
    ADD_FILE   VARCHAR(500)  NULL COMMENT '첨부파일명',
    UPDATE_DT  TIMESTAMP     NULL COMMENT '수정일시'
) COMMENT ='공지사항';

-- Table: ORG_INFO
CREATE TABLE ORG_INFO
(
    ORG_SEQ         INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '기관순번',
    ORG_NAME        VARCHAR(500) NULL COMMENT '협회_기관_센터명',
    BIZ_NO          VARCHAR(20)  NULL COMMENT '사업자등록번호_선터',
    REP_NM          VARCHAR(200) NULL COMMENT '대표자성명',
    AREA            VARCHAR(200) NULL COMMENT '소재지',
    MNG_POSIT       VARCHAR(200) NULL COMMENT '담당자직책',
    MNG_PHONE       VARCHAR(20)  NULL COMMENT '담당자연락처',
    MNG_EMAIL       VARCHAR(200) NULL COMMENT '담당자에메일',
    UPTAE           VARCHAR(500) NULL COMMENT '업태(센터)',
    JONG            VARCHAR(500) NULL COMMENT '종목(선터)',
    MNG_NM          VARCHAR(200) NULL COMMENT '담당자명',
    POST            VARCHAR(20)  NULL COMMENT '우편번호',
    ADDR1           VARCHAR(200) NULL COMMENT '주소1',
    ADDR2           VARCHAR(200) NULL COMMENT '주소2',
    ORG_GU          VARCHAR(20)  NULL COMMENT '기관회원구분코드',
    REG_NO          VARCHAR(20)  NULL COMMENT '고유번호_협회_기관',
    INPUT_DT        TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT       TIMESTAMP    NULL COMMENT '수정일시',
    MEM_COND        VARCHAR(500) NULL COMMENT '회원가입조건',
    UPDATE_USER_SEQ INTEGER      NULL COMMENT '최종수정자순번'
) COMMENT ='기관정보';

-- Table: ORG_LINK_REQ_APRV
CREATE TABLE ORG_LINK_REQ_APRV
(
    REQ_DT   TIMESTAMP NULL COMMENT '요청일시',
    APRV_DT  TIMESTAMP NULL COMMENT '승인일시',
    USER_SEQ INTEGER   NOT NULL COMMENT '요청회원번호',
    LINK_SEQ INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '연게순번',
    ORG_SEQ  INTEGER   NOT NULL COMMENT '요청기관번호'
) COMMENT ='기관연계요청승인정보';

-- Table: ORG_OPEN_APRV
CREATE TABLE ORG_OPEN_APRV
(
    REQT_DT    TIMESTAMP    NULL COMMENT '요청일시',
    APRV_USER  INTEGER      NULL COMMENT '승인자회원번호',
    USER_SEQ   INTEGER      NOT NULL COMMENT '회원순번',
    ORG_SEQ    INTEGER      NOT NULL COMMENT '기관순번',
    APPR_SEQ   INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '승인요청순번',
    APRV_DT    TIMESTAMP    NULL COMMENT '승인일시',
    APRV_YN    VARCHAR(1)   NULL COMMENT '승인여부',
    REFU_RESON VARCHAR(500) NULL COMMENT '거절사유'
) COMMENT ='기관개설승인';

-- Table: PAYMENT
CREATE TABLE PAYMENT
(
    PAY_SEQ         INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '결제순번',
    PAY_DT          TIMESTAMP   NULL COMMENT '결제일시',
    ORG_SEQ         INTEGER     NOT NULL COMMENT '기관순번',
    USER_SEQ        INTEGER     NOT NULL COMMENT '회원순번',
    PAY_TOT_AMT     INTEGER     NULL COMMENT '총결제금액',
    MEM_APL_SEQ     INTEGER     NOT NULL COMMENT '회원권신청순번',
    PAY_GB_CD       VARCHAR(20) NULL COMMENT '대금구분코드',
    EVENT_APPLY_SEQ INTEGER     NULL COMMENT '행사신정순번',
    REFUND_GB_CD    VARCHAR(20) NULL COMMENT '환불구분코드',
    REFUND_DT       TIMESTAMP   NULL COMMENT '환불일시'
) COMMENT ='결제';

-- Table: PAYMENT_DELAIL
CREATE TABLE PAYMENT_DELAIL
(
    PAY_DTL_SEQ INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '결제세부순번',
    PAY_DT      TIMESTAMP   NULL COMMENT '결제일시',
    PAY_METH_CD VARCHAR(20) NULL COMMENT '결제방법코드',
    PAY_SEQ     INTEGER     NOT NULL COMMENT '결제순번',
    PAY_AMT     INTEGER     NULL COMMENT '결제금액'
) COMMENT ='결제세부';

-- Table: PER_INFO_PERIOD
CREATE TABLE PER_INFO_PERIOD
(
    MNG_SEQ      INTEGER   NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '관리번호',
    ISOLATION_DT TIMESTAMP NULL COMMENT '마지막접속일시',
    END_CON_DT   TIMESTAMP NULL COMMENT '격리일시',
    USER_SEQ     INTEGER   NOT NULL COMMENT '회원순번'
) COMMENT ='개인정보유효기간관리';

-- Table: POST_INFO
CREATE TABLE POST_INFO
(
    POST_NO   VARCHAR(20)  NOT NULL PRIMARY KEY COMMENT '우편번호',
    INPUT_DT  TIMESTAMP    NULL COMMENT '입력일시',
    CITY      VARCHAR(200) NULL COMMENT '시군구',
    UPDATE_DT TIMESTAMP    NULL COMMENT '수정일시',
    BUILD_BNO VARCHAR(200) NULL COMMENT '건물번호본번',
    LAND_MUN  VARCHAR(200) NULL COMMENT '지번읍면',
    WIDE_CITY VARCHAR(200) NULL COMMENT '시도',
    ROAD_NAME VARCHAR(500) NULL COMMENT '도로명',
    BUILD_SNO VARCHAR(200) NULL COMMENT '건물번호부번',
    LAND_DONG VARCHAR(200) NULL COMMENT '지번행정동',
    LAND_NO   VARCHAR(200) NULL COMMENT '지번리',
    LAND_BNO  VARCHAR(200) NULL COMMENT '지번본번',
    LAND_SNO  VARCHAR(200) NULL COMMENT '지번부번'
) COMMENT ='우편번호정보';

-- Table: REWARD_PAY_INFO
CREATE TABLE REWARD_PAY_INFO
(
    REWARD_PAY_SEQ    INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '리워드지급순번',
    REWARD_PAY_CD     VARCHAR(20) NULL COMMENT '리원드지급코드',
    REWARD_PAY_CAN_CD VARCHAR(20) NULL COMMENT '지급취소구분코드',
    REWARD_PAY_DT     TIMESTAMP   NULL COMMENT '리워드지급일자',
    REWARD_PAY_AMT    INTEGER     NULL COMMENT '리워드지급금액',
    INPUT_DT          TIMESTAMP   NULL COMMENT '입력일시',
    USER_SEQ          INTEGER     NOT NULL COMMENT '회원순번',
    UPDATE_DT         TIMESTAMP   NULL COMMENT '수정일시'
) COMMENT ='리워드지급정보';

-- Table: REWARD_USE_INFO
CREATE TABLE REWARD_USE_INFO
(
    REWARD_USE_SEQ    INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '리워드사용순번',
    REWARD_USE_CD     VARCHAR(20) NULL COMMENT '리원드사용코드',
    REWARD_USE_CAN_CD VARCHAR(20) NULL COMMENT '사용취소구분코드',
    REWARD_USE_DT     TIMESTAMP   NULL COMMENT '리워드사용일자',
    REWARD_USE_AMT    INTEGER     NULL COMMENT '리워드사용금액',
    INPUT_DT          TIMESTAMP   NULL COMMENT '입력일시',
    USER_SEQ          INTEGER     NOT NULL COMMENT '회원순번',
    UPDATE_DT         TIMESTAMP   NULL COMMENT '수정일시'
) COMMENT ='리워드사용정보';

-- Table: USER_AUTH_ASSIGN
CREATE TABLE USER_AUTH_ASSIGN
(
    AUTH_ASSIGN_SEQ INTEGER     NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '권한할당순번',
    MENU_SEQ        INTEGER     NOT NULL COMMENT '메뉴순번',
    GB_CD           VARCHAR(20) NOT NULL COMMENT '회원구분코드'
) COMMENT ='사용자_권한할당';

-- Table: USER_CENTER_JOIN
CREATE TABLE USER_CENTER_JOIN
(
    INPUT_DT        TIMESTAMP  NULL COMMENT '입력일시',
    UPDATE_DT       TIMESTAMP  NULL COMMENT '수정일시',
    USER_SEQ        INTEGER    NOT NULL COMMENT '일반회원번호',
    CENTER_JOIN_SEQ INTEGER    NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '센터가입순번',
    ORG_SEQ         INTEGER    NOT NULL COMMENT '센터기관번호',
    JOIN_COMPL_GU   VARCHAR(1) NULL COMMENT '가입완료구분'
) COMMENT ='회원센타가입';

-- Table: USER_CONN_LOG
CREATE TABLE USER_CONN_LOG
(
    BROWSER      VARCHAR(500) NULL COMMENT '브라우져',
    CONN_IP      VARCHAR(200) NULL COMMENT '접속IP',
    CONN_TD      TIMESTAMP    NULL COMMENT '접속일시',
    USER_SEQ     INTEGER      NOT NULL COMMENT '회원순번',
    END_DT       TIMESTAMP    NULL COMMENT '종료일시',
    CONN_LOG_SEQ INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '로그순번'
) COMMENT ='사용자_접속로그';

-- Table: USER_EMAIL_CERT
CREATE TABLE USER_EMAIL_CERT
(
    EMAIL_CERT_SEQ INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '이메일인증순번',
    USER_ID        VARCHAR(200) NULL COMMENT 'USER_ID',
    USER_NM        VARCHAR(200) NULL COMMENT '사용자명',
    EMAIL          VARCHAR(500) NULL COMMENT '이메일',
    RANDOM_ID      VARCHAR(500) NULL COMMENT '전송랜덤번호',
    EMAIL_CHK_YN   VARCHAR(1)   NULL COMMENT '이메일확인여부'
) COMMENT ='이메일인증';

-- Table: USER_GB_CODE
CREATE TABLE USER_GB_CODE
(
    GB_CD     VARCHAR(20)  NOT NULL PRIMARY KEY COMMENT '회원구분코드',
    GB_NM     VARCHAR(200) NULL COMMENT '회원구분명',
    INPUT_DT  TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT TIMESTAMP    NULL COMMENT '수정일시'
) COMMENT ='회원구분';

-- Table: USER_HEALTH_INFO
CREATE TABLE USER_HEALTH_INFO
(
    INPUT_DT   TIMESTAMP    NULL COMMENT '입력일시',
    UPDATE_DT  TIMESTAMP    NULL COMMENT '수정일시',
    USER_SEQ   INTEGER      NOT NULL COMMENT '회원순번',
    HEALTH_SEQ INTEGER      NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '건강순번',
    HEALTH_ST  VARCHAR(500) NULL COMMENT '건강상태'
) COMMENT ='회원건강정보';

-- Table: USER_INFO
CREATE TABLE USER_INFO
(
    USER_SEQ       INTEGER       NOT NULL AUTO_INCREMENT PRIMARY KEY COMMENT '회원순번',
    USER_ID        VARCHAR(200)  NULL COMMENT '유저아이디',
    PWD            VARCHAR(500)  NULL COMMENT '패스워드',
    USER_NM        VARCHAR(500)  NULL COMMENT '회원명',
    POST           VARCHAR(20)   NULL COMMENT '우편번호',
    ADDR1          VARCHAR(500)  NULL COMMENT '주소1',
    HP_NO          VARCHAR(20)   NULL COMMENT '핸드폰전화번호',
    EMAIL          VARCHAR(500)  NULL COMMENT '이메일주소',
    GB_CD          VARCHAR(20)   NULL COMMENT '회원구분코드',
    INPUT_DT       TIMESTAMP     NULL COMMENT '입력일시',
    EMAIL_CERT_SEQ INTEGER       NULL COMMENT '이메일인증순번',
    USER_DEL_GU    VARCHAR(1)    NULL COMMENT '탈퇴여부',
    USER_DEL_DT    TIMESTAMP     NULL COMMENT '탈퇴일시',
    ADDR2          VARCHAR(500)  NULL COMMENT '주소2',
    USER_DESC      VARCHAR(2000) NULL COMMENT '고객설명',
    USER_DESC2     VARCHAR(2000) NULL COMMENT '고객특이사항',
    UPDATE_DT      TIMESTAMP     NULL COMMENT '수정일시',
    BIRTH_YMD      VARCHAR(8)    NULL COMMENT '생년월일',
    MKT_REC_YN     VARCHAR(1)    NULL COMMENT '마케팅수신동의여부',
    CONTRACT_YN    VARCHAR(200)  NULL COMMENT '계약서확인서명',
    SUGG_USER_NO   INTEGER       NULL COMMENT '추천인회원번호',
    ORG_SEQ        INTEGER       NOT NULL COMMENT '기관순번',
    PROFILE_FILE   VARCHAR(500)  NULL COMMENT '프로필사진파일명'
) COMMENT ='회원정보';

-- Unique Indexes
CREATE UNIQUE INDEX UX_EMAIL ON USER_INFO (EMAIL);
CREATE UNIQUE INDEX UX_USER_ID ON USER_INFO (USER_ID);

-- Foreign Key Constraints

-- COUNSEL Foreign Keys
ALTER TABLE COUNSEL
    ADD CONSTRAINT FK_COUNSEL_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- COUNSEL_RESULT Foreign Keys
ALTER TABLE COUNSEL_RESULT
    ADD CONSTRAINT FK_COUNSEL_RESULT_COUNSEL_RESVE FOREIGN KEY (RESVE_SEQ) REFERENCES COUNSEL_RESVE (RESVE_SEQ);

-- COUNSEL_RESVE Foreign Keys
ALTER TABLE COUNSEL_RESVE
    ADD CONSTRAINT FK_COUNSEL_RESVE_COUNSEL FOREIGN KEY (CNSLT_SEQ) REFERENCES COUNSEL (CNSLT_SEQ);
ALTER TABLE COUNSEL_RESVE
    ADD CONSTRAINT FK_COUNSEL_RESVE_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- EVENT Foreign Keys
ALTER TABLE EVENT
    ADD CONSTRAINT FK_EVENT_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- EVENT_DPLM Foreign Keys
ALTER TABLE EVENT_DPLM
    ADD CONSTRAINT FK_EVENT_DPLM_EVENT_PARTCPT_APPLY FOREIGN KEY (EVENT_APPLY_SEQ) REFERENCES EVENT_PARTCPT_APPLY (EVENT_APPLY_SEQ);

-- EVENT_PARTCPT_APPLY Foreign Keys
ALTER TABLE EVENT_PARTCPT_APPLY
    ADD CONSTRAINT FK_EVENT_PARTCPT_APPLY_EVENT FOREIGN KEY (EVENT_SEQ) REFERENCES EVENT (EVENT_SEQ);
ALTER TABLE EVENT_PARTCPT_APPLY
    ADD CONSTRAINT FK_EVENT_PARTCPT_APPLY_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- EVENT_PARTCPT_ATTNED_CHK Foreign Keys
ALTER TABLE EVENT_PARTCPT_ATTNED_CHK
    ADD CONSTRAINT FK_EVENT_PARTCPT_ATTNED_CHK_EVENT_PARTCPT_APPLY FOREIGN KEY (EVENT_APPLY_SEQ) REFERENCES EVENT_PARTCPT_APPLY (EVENT_APPLY_SEQ);

-- INSTR_CONT_INFO Foreign Keys
ALTER TABLE INSTR_CONT_INFO
    ADD CONSTRAINT FK_INSTR_CONT_INFO_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);
ALTER TABLE INSTR_CONT_INFO
    ADD CONSTRAINT FK_INSTR_CONT_INFO_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- INSTR_CRTFCT Foreign Keys
ALTER TABLE INSTR_CRTFCT
    ADD CONSTRAINT FK_INSTR_CRTFCT_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- INSTR_EXPER Foreign Keys
ALTER TABLE INSTR_EXPER
    ADD CONSTRAINT FK_INSTR_EXPER_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- INSTR_PREMIER Foreign Keys
ALTER TABLE INSTR_PREMIER
    ADD CONSTRAINT FK_INSTR_PREMIER_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- JOB_OFFER Foreign Keys
ALTER TABLE JOB_OFFER
    ADD CONSTRAINT FK_JOB_OFFER_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- JOB_OFFER_APPLY Foreign Keys
ALTER TABLE JOB_OFFER_APPLY
    ADD CONSTRAINT FK_JOB_OFFER_APPLY_JOB_OFFER FOREIGN KEY (OFFER_SEQ) REFERENCES JOB_OFFER (OFFER_SEQ);
ALTER TABLE JOB_OFFER_APPLY
    ADD CONSTRAINT FK_JOB_OFFER_APPLY_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- JOB_POSTING Foreign Keys
ALTER TABLE JOB_POSTING
    ADD CONSTRAINT FK_JOB_POSTING_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- LECTURE Foreign Keys
ALTER TABLE LECTURE
    ADD CONSTRAINT FK_LECTURE_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- LECTURE_ATTEND_CHK Foreign Keys
ALTER TABLE LECTURE_ATTEND_CHK
    ADD CONSTRAINT FK_LECTURE_ATTEND_CHK_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE LECTURE_ATTEND_CHK
    ADD CONSTRAINT FK_LECTURE_ATTEND_CHK_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);

-- LECTURE_ATTEND_FEEDBACK Foreign Keys
ALTER TABLE LECTURE_ATTEND_FEEDBACK
    ADD CONSTRAINT FK_LECTURE_ATTEND_FEEDBACK_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE LECTURE_ATTEND_FEEDBACK
    ADD CONSTRAINT FK_LECTURE_ATTEND_FEEDBACK_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);
ALTER TABLE LECTURE_ATTEND_FEEDBACK
    ADD CONSTRAINT FK_LECTURE_ATTEND_FEEDBACK_LECTURE_REPORT FOREIGN KEY (REPORT_SEQ) REFERENCES LECTURE_REPORT (REPORT_SEQ);

-- LECTURE_CRTFCT_INFO Foreign Keys
ALTER TABLE LECTURE_CRTFCT_INFO
    ADD CONSTRAINT FK_LECTURE_CRTFCT_INFO_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE LECTURE_CRTFCT_INFO
    ADD CONSTRAINT FK_LECTURE_CRTFCT_INFO_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);

-- LECTURE_DPLM_INFO Foreign Keys
ALTER TABLE LECTURE_DPLM_INFO
    ADD CONSTRAINT FK_LECTURE_DPLM_INFO_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE LECTURE_DPLM_INFO
    ADD CONSTRAINT FK_LECTURE_DPLM_INFO_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);

-- LECTURE_EVAL Foreign Keys
ALTER TABLE LECTURE_EVAL
    ADD CONSTRAINT FK_LECTURE_EVAL_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE LECTURE_EVAL
    ADD CONSTRAINT FK_LECTURE_EVAL_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);

-- LECTURE_INSTR Foreign Keys
ALTER TABLE LECTURE_INSTR
    ADD CONSTRAINT FK_LECTURE_INSTR_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);
ALTER TABLE LECTURE_INSTR
    ADD CONSTRAINT FK_LECTURE_INSTR_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- LECTURE_REPORT Foreign Keys
ALTER TABLE LECTURE_REPORT
    ADD CONSTRAINT FK_LECTURE_REPORT_LECTURE_INSTR FOREIGN KEY (LECT_INSTR_SEQ) REFERENCES LECTURE_INSTR (LECT_INSTR_SEQ);

-- LECTURE_RSVT Foreign Keys
ALTER TABLE LECTURE_RSVT
    ADD CONSTRAINT FK_LECTURE_RSVT_LECTURE_SCHEDULE FOREIGN KEY (SCHDL_SEQ) REFERENCES LECTURE_SCHEDULE (SCHDL_SEQ);
ALTER TABLE LECTURE_RSVT
    ADD CONSTRAINT FK_LECTURE_RSVT_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);

-- LECTURE_SCHEDULE Foreign Keys
ALTER TABLE LECTURE_SCHEDULE
    ADD CONSTRAINT FK_LECTURE_SCHEDULE_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);
ALTER TABLE LECTURE_SCHEDULE
    ADD CONSTRAINT FK_LECTURE_SCHEDULE_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- MEMBERSHIP Foreign Keys
ALTER TABLE MEMBERSHIP
    ADD CONSTRAINT FK_MEMBERSHIP_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- MEMBERSHIP_APPLY Foreign Keys
ALTER TABLE MEMBERSHIP_APPLY
    ADD CONSTRAINT FK_MEMBERSHIP_APPLY_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);
ALTER TABLE MEMBERSHIP_APPLY
    ADD CONSTRAINT FK_MEMBERSHIP_APPLY_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);
ALTER TABLE MEMBERSHIP_APPLY
    ADD CONSTRAINT FK_MEMBERSHIP_APPLY_MEMBERSHIP FOREIGN KEY (MEM_SEQ) REFERENCES MEMBERSHIP (MEM_SEQ);

-- MEMBERSHIP_LECTURE Foreign Keys
ALTER TABLE MEMBERSHIP_LECTURE
    ADD CONSTRAINT FK_MEMBERSHIP_LECTURE_MEMBERSHIP FOREIGN KEY (MEM_SEQ) REFERENCES MEMBERSHIP (MEM_SEQ);
ALTER TABLE MEMBERSHIP_LECTURE
    ADD CONSTRAINT FK_MEMBERSHIP_LECTURE_LECTURE FOREIGN KEY (LECT_SEQ) REFERENCES LECTURE (LECT_SEQ);
ALTER TABLE MEMBERSHIP_LECTURE
    ADD CONSTRAINT FK_MEMBERSHIP_LECTURE_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- MEMBERSHIP_STOP Foreign Keys
ALTER TABLE MEMBERSHIP_STOP
    ADD CONSTRAINT FK_MEMBERSHIP_STOP_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);

-- ORG_LINK_REQ_APRV Foreign Keys
ALTER TABLE ORG_LINK_REQ_APRV
    ADD CONSTRAINT FK_ORG_LINK_REQ_APRV_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);
ALTER TABLE ORG_LINK_REQ_APRV
    ADD CONSTRAINT FK_ORG_LINK_REQ_APRV_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- ORG_OPEN_APRV Foreign Keys
ALTER TABLE ORG_OPEN_APRV
    ADD CONSTRAINT FK_ORG_OPEN_APRV_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);
ALTER TABLE ORG_OPEN_APRV
    ADD CONSTRAINT FK_ORG_OPEN_APRV_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);

-- PAYMENT Foreign Keys
ALTER TABLE PAYMENT
    ADD CONSTRAINT FK_PAYMENT_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);
ALTER TABLE PAYMENT
    ADD CONSTRAINT FK_PAYMENT_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);
ALTER TABLE PAYMENT
    ADD CONSTRAINT FK_PAYMENT_MEMBERSHIP_APPLY FOREIGN KEY (MEM_APL_SEQ) REFERENCES MEMBERSHIP_APPLY (MEM_APL_SEQ);
ALTER TABLE PAYMENT
    ADD CONSTRAINT FK_PAYMENT_EVENT_PARTCPT_APPLY FOREIGN KEY (EVENT_APPLY_SEQ) REFERENCES EVENT_PARTCPT_APPLY (EVENT_APPLY_SEQ);

-- PAYMENT_DELAIL Foreign Keys
ALTER TABLE PAYMENT_DELAIL
    ADD CONSTRAINT FK_PAYMENT_DELAIL_PAYMENT FOREIGN KEY (PAY_SEQ) REFERENCES PAYMENT (PAY_SEQ);

-- PER_INFO_PERIOD Foreign Keys
ALTER TABLE PER_INFO_PERIOD
    ADD CONSTRAINT FK_PER_INFO_PERIOD_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- REWARD_PAY_INFO Foreign Keys
ALTER TABLE REWARD_PAY_INFO
    ADD CONSTRAINT FK_REWARD_PAY_INFO_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- REWARD_USE_INFO Foreign Keys
ALTER TABLE REWARD_USE_INFO
    ADD CONSTRAINT FK_REWARD_USE_INFO_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- USER_AUTH_ASSIGN Foreign Keys
ALTER TABLE USER_AUTH_ASSIGN
    ADD CONSTRAINT FK_USER_AUTH_ASSIGN_MENU FOREIGN KEY (MENU_SEQ) REFERENCES MENU (MENU_SEQ);
ALTER TABLE USER_AUTH_ASSIGN
    ADD CONSTRAINT FK_USER_AUTH_ASSIGN_USER_GB_CODE FOREIGN KEY (GB_CD) REFERENCES USER_GB_CODE (GB_CD);

-- USER_CENTER_JOIN Foreign Keys
ALTER TABLE USER_CENTER_JOIN
    ADD CONSTRAINT FK_USER_CENTER_JOIN_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);
ALTER TABLE USER_CENTER_JOIN
    ADD CONSTRAINT FK_USER_CENTER_JOIN_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- USER_CONN_LOG Foreign Keys
ALTER TABLE USER_CONN_LOG
    ADD CONSTRAINT FK_USER_CONN_LOG_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- USER_HEALTH_INFO Foreign Keys
ALTER TABLE USER_HEALTH_INFO
    ADD CONSTRAINT FK_USER_HEALTH_INFO_USER_INFO FOREIGN KEY (USER_SEQ) REFERENCES USER_INFO (USER_SEQ);

-- USER_INFO Foreign Keys
ALTER TABLE USER_INFO
    ADD CONSTRAINT FK_USER_INFO_USER_EMAIL_CERT FOREIGN KEY (EMAIL_CERT_SEQ) REFERENCES USER_EMAIL_CERT (EMAIL_CERT_SEQ);
ALTER TABLE USER_INFO
    ADD CONSTRAINT FK_USER_INFO_ORG_INFO FOREIGN KEY (ORG_SEQ) REFERENCES ORG_INFO (ORG_SEQ);
ALTER TABLE USER_INFO
    ADD CONSTRAINT FK_USER_INFO_USER_GB_CODE FOREIGN KEY (GB_CD) REFERENCES USER_GB_CODE (GB_CD);
